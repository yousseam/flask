const http = require('http');
const fs = require('fs');
const path = require('path');

// Create the server
const server = http.createServer((req, res) => {
    console.log(`Request for ${req.url} received`);

    // Routing logic to handle different file types
    if (req.url === '/' || req.url === '/home') {
        // Serve home.html file
        const filePath = path.join(__dirname, 'templates', 'home.html');
        serveFile(res, filePath, 'text/html');
    } else if (req.url === '/css/styles.css') {
        // Serve styles.css file
        const filePath = path.join(__dirname, 'css', 'styles.css');
        serveFile(res, filePath, 'text/css');
    } else if (req.url === '/favicon.ico') {
        // Serve favicon.ico file
        const filePath = path.join(__dirname, 'static', 'favicon.ico');
        serveFile(res, filePath, 'image/x-icon');
    } else {
        // Serve 404 for anything else
        res.writeHead(404, { 'Content-Type': 'text/plain' });
        res.end('404 Not Found');
    }
});

// Function to serve static files
function serveFile(res, filePath, contentType) {
    fs.readFile(filePath, (err, content) => {
        if (err) {
            if (err.code === 'ENOENT') {
                res.writeHead(404, { 'Content-Type': 'text/plain' });
                res.end('404 Not Found');
            } else {
                res.writeHead(500, { 'Content-Type': 'text/plain' });
                res.end('500 Server Error');
            }
        } else {
            res.writeHead(200, { 'Content-Type': contentType });
            res.end(content, 'utf-8');
        }
    });
}

// Start the server
const PORT = process.env.PORT || 3000;
server.listen(PORT, () => {
    console.log(`Server is running on http://localhost:${PORT}`);
});
